<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Refactoring on Exeal</title><link>https://www.exeal.com/katas/tags/refactoring/</link><description>Recent content in Refactoring on Exeal</description><generator>Hugo</generator><language>es</language><lastBuildDate>Tue, 27 May 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://www.exeal.com/katas/tags/refactoring/index.xml" rel="self" type="application/rss+xml"/><item><title>Refactoring Golf</title><link>https://www.exeal.com/katas/refactoring-golf/</link><pubDate>Tue, 27 May 2025 00:00:00 +0000</pubDate><guid>https://www.exeal.com/katas/refactoring-golf/</guid><description>&lt;p>Refactoring Golf es un ejercicio práctico pensado para fortalecer tu habilidad de refactorizar código y descubrir hasta dónde puede ayudarte tu IDE mediante atajos y automatizaciones. Partirás de un conjunto de pequeños proyectos ― los «Holes» ― donde cada Hole X contiene la versión inicial de un mismo problema (aplicar un impuesto a varias cantidades monetarias) y Hole X + 1 muestra la solución deseada tras la refactorización.&lt;/p>
&lt;h2 id="objetivo">Objetivo&lt;/h2>
&lt;p>Tu misión es transformar el código de Hole X hasta que se comporte y se vea como el de Hole X + 1, procurando hacerlo de forma segura y con el menor número posible de modificaciones manuales. El foco está en practicar refactorizaciones guiadas por tests, empleando transformaciones automáticas y atajos del entorno de desarrollo para ahorrar esfuerzo y reducir errores.&lt;/p></description></item><item><title>Lift Pass Pricing Kata</title><link>https://www.exeal.com/katas/lift-pass-pricing-kata/</link><pubDate>Fri, 23 Feb 2024 00:00:00 +0000</pubDate><guid>https://www.exeal.com/katas/lift-pass-pricing-kata/</guid><description>&lt;h2 id="tu-tarea">Tu tarea&lt;/h2>
&lt;p>Esta aplicación resuelve el problema de calcular el precio de los &lt;em>forfaits&lt;/em>, es decir, los pases para acceder a esquiar. Existe una lógica intrincada vinculada al tipo de &lt;em>forfait&lt;/em> que deseas, tu edad y la fecha específica en la que te gustaría esquiar.&lt;/p>
&lt;p>Se pide implementar una nueva funcionalidad: poder obtener el precio de varios &lt;em>forfaits&lt;/em>, no solo uno.&lt;/p>
&lt;p>Actualmente, el precio de un solo &lt;em>forfait&lt;/em> está implementado; desafortunadamente, el código tal como está diseñado no es reutilizable. Podrías implementar algunos tests de alto nivel para realizar una refactorización preparatoria de modo que la nueva funcionalidad requiera un esfuerzo mínimo para implementarse.&lt;/p></description></item><item><title>Parrot Refactoring Kata</title><link>https://www.exeal.com/katas/parrot-refactoring-kata/</link><pubDate>Thu, 08 Feb 2024 00:00:00 +0000</pubDate><guid>https://www.exeal.com/katas/parrot-refactoring-kata/</guid><description>&lt;h2 id="tu-tarea">Tu tarea&lt;/h2>
&lt;p>¿Puedes detectar algún &amp;ldquo;code smell&amp;rdquo; en este código? Te daré una pista, el problema más evidente se engloba dentro de la categoría de &lt;a href="https://refactoring.guru/es/refactoring/smells/oo-abusers">Object orientation abusers&lt;/a>.&lt;/p>
&lt;h2 id="cómo-resolverla">Cómo resolverla&lt;/h2>
&lt;p>Descarga el código inicial aquí, y elige el lenguaje en el que desees resolver la kata: &lt;a href="https://github.com/emilybache/Parrot-Refactoring-Kata">https://github.com/emilybache/Parrot-Refactoring-Kata&lt;/a>&lt;/p>
&lt;p>Refactoriza el código aplicando los movimientos de la receta &lt;a href="https://refactoring.guru/es/replace-conditional-with-polymorphism">&amp;ldquo;Reemplazar condicional con polimorfismo&amp;rdquo;&lt;/a>, dando pequeños pasos, y ejecutando los tests con frecuencia. Intenta no modificar el código de producción y el código de tests a la vez y, sobre todo, &lt;strong>mantener los tests en verde en todo momento&lt;/strong>.&lt;/p></description></item><item><title>Trip Service Kata</title><link>https://www.exeal.com/katas/trip-service-kata/</link><pubDate>Sat, 23 Dec 2023 00:00:00 +0000</pubDate><guid>https://www.exeal.com/katas/trip-service-kata/</guid><description>&lt;h2 id="tu-tarea">Tu tarea&lt;/h2>
&lt;p>El código de inicio de esta kata consiste en un servicio (&lt;code>TripService&lt;/code>) que no está testeado. El código contiene dos dependencias que evitan que añadamos tests correctamente.&lt;/p>
&lt;p>Nuestras tareas con este código son:&lt;/p>
&lt;ul>
&lt;li>Desacoplar las dependencias que impiden cubrir el código con tests.&lt;/li>
&lt;li>Añadir tests de caracterización para todos los casos necesarios.&lt;/li>
&lt;li>Refactorizar el código resultante para mejorar la legibilidad.&lt;/li>
&lt;/ul>
&lt;p>Reglas:&lt;/p>
&lt;ul>
&lt;li>No podemos cambiar ningún código existente si no está cubierto por tests.&lt;/li>
&lt;li>No podemos permitirnos romper ningún comportamiento existente.
&lt;ul>
&lt;li>La única excepción es si necesitamos modificar el código para agregar pruebas unitarias, pero en este caso, solo se permiten refactorizaciones automatizadas (a través del IDE).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>Código de inicio de la kata: &lt;a href="https://github.com/exeal-es/trip-service-kata">https://github.com/exeal-es/trip-service-kata&lt;/a>&lt;/p></description></item></channel></rss>