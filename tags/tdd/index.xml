<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>tdd on Exeal</title><link>https://www.exeal.com/tags/tdd/</link><description>Recent content in tdd on Exeal</description><generator>Hugo -- gohugo.io</generator><language>es-es</language><lastBuildDate>Fri, 15 Dec 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://www.exeal.com/tags/tdd/index.xml" rel="self" type="application/rss+xml"/><item><title>La base de la integración continua: los micro-commits</title><link>https://www.exeal.com/blog/2023/12/la-base-de-la-integracion-continua-los-micro-commits/</link><pubDate>Fri, 15 Dec 2023 00:00:00 +0000</pubDate><guid>https://www.exeal.com/blog/2023/12/la-base-de-la-integracion-continua-los-micro-commits/</guid><description>Quizá te sorprenda (a mí me sorprendió cuando empecé a ayudar a otros equipos como coach), pero la mayoría de desarrolladores commitean código al control de versiones apenas entre 2 o 3 veces por semana.
Esto les limita la frecuencia con la que pueden entregar código funcionando a producción.
Cuando nuestro objetivo es incrementar la frecuencia de entrega de valor, y por tanto practicar trunk-based development, continuous integration y continuous delivery, buscamos justo lo contrario: acelerar la frecuencia con la que commiteamos, tanto como sea posible.</description></item><item><title>Práctica deliberada: una forma alternativa de aprender TDD</title><link>https://www.exeal.com/blog/2023/10/practica-deliberada-y-tdd/</link><pubDate>Tue, 31 Oct 2023 00:00:00 +0000</pubDate><guid>https://www.exeal.com/blog/2023/10/practica-deliberada-y-tdd/</guid><description>¿Alguna vez te has estancado practicando TDD, refactoring, diseño de software o cualquier otra habilidad relacionada con la programación?
¿Sientes que te has quedado sin katas de resolver, y que las que hay son demasiado sencillas?
Quizá es que estés practicando con el enfoque erróneo.
Para extraer el máximo partido de practicar con katas, tenemos que emplear una técnica de práctica muy concreta: la práctica deliberada.
¿Qué es la práctica deliberada?</description></item><item><title>Cómo escribir el primer test usando TDD</title><link>https://www.exeal.com/blog/2023/10/como-escribir-el-primer-test-usando-tdd/</link><pubDate>Wed, 25 Oct 2023 00:00:00 +0000</pubDate><guid>https://www.exeal.com/blog/2023/10/como-escribir-el-primer-test-usando-tdd/</guid><description>El primer test es uno de los pasos más importantes cuando desarrollamos TDD. Es el que va a determinar si construimos nuestra solución sobre unos cimientos sólidos o nos vamos a complicar la vida innecesariamente.
Hay tres cosas principales que yo le pido a mi primer test:
La primera, que ponga sobre la mesa los elementos más importantes que van a entrar en juego, o las entradas y salidas del sistema (a.</description></item><item><title>Transformation Priority Premise</title><link>https://www.exeal.com/blog/2022/08/transformation-priority-premise/</link><pubDate>Sun, 07 Aug 2022 23:10:00 +0000</pubDate><guid>https://www.exeal.com/blog/2022/08/transformation-priority-premise/</guid><description>Transformation Priority Premise El tio bob lleva muchos años diciendo que mientras las pruebas son más específicas, el código se hace más genérico. Y es que de tanto refactorizar, de tanto modificar el código con esas pequeñas mejoras de estructura sin cambiar su comportamiento exterior, van ocurriendo transformaciones en el código de producción que parecen seguir un cierto camino ordenado.
Esto parece generar una lista de transformaciones ordenada que nos puede servir de guía para alcanzar una implementación más genérica.</description></item></channel></rss>