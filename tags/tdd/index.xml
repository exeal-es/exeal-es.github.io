<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>tdd on Exeal</title><link>https://www.exeal.com/tags/tdd/</link><description>Recent content in tdd on Exeal</description><generator>Hugo -- gohugo.io</generator><language>es-es</language><lastBuildDate>Sat, 23 Dec 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://www.exeal.com/tags/tdd/index.xml" rel="self" type="application/rss+xml"/><item><title>Bank Kata</title><link>https://www.exeal.com/katas/bank-kata/</link><pubDate>Sat, 23 Dec 2023 00:00:00 +0000</pubDate><guid>https://www.exeal.com/katas/bank-kata/</guid><description>Tu tarea Implementar un servicio para gestionar transacciones de una cuenta bancaria, así como imprimir el extracto bancario. Dicho servicio debe respetar la siguiente interfaz:
interface AccountService { void deposit(int amount) void withdraw(int amount) void printStatement() } Asumimos que el método printStatement() imprime el extracto bancario a través de la consola o salida estándar.
Por simplicidad, usaremos int para representar las cantidades monetarias (aunque sabemos que esto no es una buena práctica en sistemas productivos).</description></item><item><title>Fizz Buzz Kata</title><link>https://www.exeal.com/katas/fizz-buzz-kata/</link><pubDate>Sat, 23 Dec 2023 00:00:00 +0000</pubDate><guid>https://www.exeal.com/katas/fizz-buzz-kata/</guid><description>Tu tarea Escribe una función FizzBuzz(number): string que reciba un número natural, y devuelva un string conforme a las siguientes reglas:
Normalmente, devuelve la representación como string del número. Para los múltiplos de tres, devuelve Fizz en lugar del número. Para los múltiplos de cinco, imprime Buzz en lugar del número. Para los números que son múltiplos de tres y cinco, devuelve FizzBuzz en lugar del número. Cómo resolverla Este es un ejercicio para practicar los fundamentos de test-driven development (TDD).</description></item><item><title>Game Of Life Kata</title><link>https://www.exeal.com/katas/game-of-life-kata/</link><pubDate>Sat, 23 Dec 2023 00:00:00 +0000</pubDate><guid>https://www.exeal.com/katas/game-of-life-kata/</guid><description>Tu tarea Esta kata trata sobre calcular la siguiente generación del Juego de la Vida de Conway, dado cualquier posición inicial. Consulta http://en.wikipedia.org/wiki/Conway%27s_Game_of_Life para conocer más sobre este famoso problema.
Comienzas con una cuadrícula bidimensional de celdas, donde cada celda está viva o muerta. En esta versión del problema, la cuadrícula es finita y no puede haber vida más allá de los bordes. Al calcular la próxima generación de la cuadrícula, sigue estas reglas:</description></item><item><title>Leap Year Kata</title><link>https://www.exeal.com/katas/leap-year-kata/</link><pubDate>Sat, 23 Dec 2023 00:00:00 +0000</pubDate><guid>https://www.exeal.com/katas/leap-year-kata/</guid><description>Tu tarea Escribir una función que determine si un año dado es bisiesto o no, de acuerdo con las siguientes reglas.
Todos los años divisibles por 400 SON años bisiestos (por lo tanto, por ejemplo, el año 2000 fue de hecho un año bisiesto). Todos los años divisibles por 100 pero no por 400 NO SON años bisiestos (por lo tanto, por ejemplo, 1700, 1800 y 1900 NO fueron años bisiestos, NI lo será el año 2100).</description></item><item><title>Mars Rover Kata</title><link>https://www.exeal.com/katas/mars-rover-kata/</link><pubDate>Sat, 23 Dec 2023 00:00:00 +0000</pubDate><guid>https://www.exeal.com/katas/mars-rover-kata/</guid><description>Tu tarea Formas parte del equipo que explora Marte enviando vehículos controlados de forma remota a la superficie del planeta. Desarrolla una API que traduzca las instrucciones enviadas desde la Tierra a comandos que el rover pueda entender.
Requisitos Se te proporciona el punto de inicio inicial (x, y) de un rover y la dirección (N, S, E, W) en la que está orientado. El rover recibe una matriz de caracteres con comandos.</description></item><item><title>Ohce Kata</title><link>https://www.exeal.com/katas/ohce-kata/</link><pubDate>Sat, 23 Dec 2023 00:00:00 +0000</pubDate><guid>https://www.exeal.com/katas/ohce-kata/</guid><description>Tu tarea ohce es una aplicación de consola que reproduce al revés lo que ingreses a través de la consola.
Aunque parezca una aplicación tonta, ohce hace algunas cosas más:
Cuando inicias ohce, te saluda de manera diferente según la hora actual, pero solo en español: Entre las 20 y las 6 horas, ohce te saludará diciendo: ¡Buenas noches &amp;lt;tu nombre&amp;gt;! Entre las 6 y las 12 horas, ohce te saludará diciendo: ¡Buenos días &amp;lt;tu nombre&amp;gt;!</description></item><item><title>Snake And Ladders Kata</title><link>https://www.exeal.com/katas/snake-and-ladders-kata/</link><pubDate>Sat, 23 Dec 2023 00:00:00 +0000</pubDate><guid>https://www.exeal.com/katas/snake-and-ladders-kata/</guid><description>Snakes and Ladders (Serpientes y Escaleras) es un antiguo juego de mesa indio considerado hoy en día un clásico mundial. Se juega entre dos o más jugadores en un tablero de juego que tiene cuadrados numerados y enrejados. En el tablero se representan varias &amp;ldquo;escaleras&amp;rdquo; y &amp;ldquo;serpientes&amp;rdquo;, cada una conectando dos cuadrados específicos del tablero. (Fuente: Wikipedia)
Tu tarea Tu tarea es crear una clase simple llamada SnakesLadders. Los casos de prueba llamarán al método play(die1: number, die2: number): string independientemente del estado del juego o del turno del jugador.</description></item><item><title>String Calculator Kata</title><link>https://www.exeal.com/katas/string-calculator-kata/</link><pubDate>Sat, 23 Dec 2023 00:00:00 +0000</pubDate><guid>https://www.exeal.com/katas/string-calculator-kata/</guid><description>Este es un ejercicio incremental para simular una situación empresarial real: avanza paso a paso en orden, pero no leas el siguiente requisito antes de haber terminado el actual.
Paso 1 Crea una calculadora simple de cadenas con una firma de método:
int Add(string numbers) El método puede recibir hasta dos números, separados por comas, y devolverá su suma.
Por ejemplo:
Para las entradas &amp;quot;&amp;quot; o &amp;ldquo;1&amp;rdquo; o &amp;ldquo;1,2&amp;rdquo;. Para una cadena vacía, devolverá 0.</description></item><item><title>Tic Tac Toe Kata</title><link>https://www.exeal.com/katas/tic-tac-toe-kata/</link><pubDate>Sat, 23 Dec 2023 00:00:00 +0000</pubDate><guid>https://www.exeal.com/katas/tic-tac-toe-kata/</guid><description>Tu tarea Implementar el clásico juego tres en raya, en el que dos jugadores X y O marcan alternadamente los espacios de un tablero de 3x3. El primer jugador que haga 3 en raya gana la partida.
Las reglas del juego son las siguientes:
El juego termina cuando todos los campos están ocupados. El juego termina cuando todos los campos en una columna son ocupados por un jugador. El juego termina cuando todos los campos en una fila son ocupados por un jugador.</description></item><item><title>La base de la integración continua: los micro-commits</title><link>https://www.exeal.com/blog/2023/12/la-base-de-la-integracion-continua-los-micro-commits/</link><pubDate>Fri, 15 Dec 2023 00:00:00 +0000</pubDate><guid>https://www.exeal.com/blog/2023/12/la-base-de-la-integracion-continua-los-micro-commits/</guid><description>Quizá te sorprenda (a mí me sorprendió cuando empecé a ayudar a otros equipos como coach), pero la mayoría de desarrolladores commitean código al control de versiones apenas entre 2 o 3 veces por semana.
Esto les limita la frecuencia con la que pueden entregar código funcionando a producción.
Cuando nuestro objetivo es incrementar la frecuencia de entrega de valor, y por tanto practicar trunk-based development, continuous integration y continuous delivery, buscamos justo lo contrario: acelerar la frecuencia con la que commiteamos, tanto como sea posible.</description></item><item><title>Práctica deliberada: una forma alternativa de aprender TDD</title><link>https://www.exeal.com/blog/2023/10/practica-deliberada-y-tdd/</link><pubDate>Tue, 31 Oct 2023 00:00:00 +0000</pubDate><guid>https://www.exeal.com/blog/2023/10/practica-deliberada-y-tdd/</guid><description>¿Alguna vez te has estancado practicando TDD, refactoring, diseño de software o cualquier otra habilidad relacionada con la programación?
¿Sientes que te has quedado sin katas de resolver, y que las que hay son demasiado sencillas?
Quizá es que estés practicando con el enfoque erróneo.
Para extraer el máximo partido de practicar con katas, tenemos que emplear una técnica de práctica muy concreta: la práctica deliberada.
¿Qué es la práctica deliberada?</description></item><item><title>Cómo escribir el primer test usando TDD</title><link>https://www.exeal.com/blog/2023/10/como-escribir-el-primer-test-usando-tdd/</link><pubDate>Wed, 25 Oct 2023 00:00:00 +0000</pubDate><guid>https://www.exeal.com/blog/2023/10/como-escribir-el-primer-test-usando-tdd/</guid><description>El primer test es uno de los pasos más importantes cuando desarrollamos TDD. Es el que va a determinar si construimos nuestra solución sobre unos cimientos sólidos o nos vamos a complicar la vida innecesariamente.
Hay tres cosas principales que yo le pido a mi primer test:
La primera, que ponga sobre la mesa los elementos más importantes que van a entrar en juego, o las entradas y salidas del sistema (a.</description></item><item><title>Transformation Priority Premise</title><link>https://www.exeal.com/blog/2022/08/transformation-priority-premise/</link><pubDate>Sun, 07 Aug 2022 23:10:00 +0000</pubDate><guid>https://www.exeal.com/blog/2022/08/transformation-priority-premise/</guid><description>Transformation Priority Premise El tio bob lleva muchos años diciendo que mientras las pruebas son más específicas, el código se hace más genérico. Y es que de tanto refactorizar, de tanto modificar el código con esas pequeñas mejoras de estructura sin cambiar su comportamiento exterior, van ocurriendo transformaciones en el código de producción que parecen seguir un cierto camino ordenado.
Esto parece generar una lista de transformaciones ordenada que nos puede servir de guía para alcanzar una implementación más genérica.</description></item></channel></rss>