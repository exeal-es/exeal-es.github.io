<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>experienced on Exeal</title><link>https://www.exeal.com/tags/experienced/</link><description>Recent content in experienced on Exeal</description><generator>Hugo -- gohugo.io</generator><language>es-es</language><lastBuildDate>Sat, 23 Dec 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://www.exeal.com/tags/experienced/index.xml" rel="self" type="application/rss+xml"/><item><title>Bank Kata</title><link>https://www.exeal.com/katas/bank-kata/</link><pubDate>Sat, 23 Dec 2023 00:00:00 +0000</pubDate><guid>https://www.exeal.com/katas/bank-kata/</guid><description>Tu tarea Implementar un servicio para gestionar transacciones de una cuenta bancaria, así como imprimir el extracto bancario. Dicho servicio debe respetar la siguiente interfaz:
interface AccountService { void deposit(int amount) void withdraw(int amount) void printStatement() } Asumimos que el método printStatement() imprime el extracto bancario a través de la consola o salida estándar.
Por simplicidad, usaremos int para representar las cantidades monetarias (aunque sabemos que esto no es una buena práctica en sistemas productivos).</description></item><item><title>Trip Service Kata</title><link>https://www.exeal.com/katas/trip-service-kata/</link><pubDate>Sat, 23 Dec 2023 00:00:00 +0000</pubDate><guid>https://www.exeal.com/katas/trip-service-kata/</guid><description>Tu tarea El código de inicio de esta kata consiste en un servicio (TripService) que no está testeado. El código contiene dos dependencias que evitan que añadamos tests correctamente.
Nuestras tareas con este código son:
Desacoplar las dependencias que impiden cubrir el código con tests. Añadir tests de caracterización para todos los casos necesarios. Refactorizar el código resultante para mejorar la legibilidad. Reglas:
No podemos cambiar ningún código existente si no está cubierto por tests.</description></item></channel></rss>