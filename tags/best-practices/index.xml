<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>best-practices on Exeal</title><link>https://www.exeal.com/tags/best-practices/</link><description>Recent content in best-practices on Exeal</description><generator>Hugo -- gohugo.io</generator><language>es-es</language><lastBuildDate>Thu, 01 Feb 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://www.exeal.com/tags/best-practices/index.xml" rel="self" type="application/rss+xml"/><item><title>Entregar código a diario: Continuous Integration y Continuous Delivery</title><link>https://www.exeal.com/blog/2024/02/entregar-codigo-a-diario-continuous-integration-y-continuous-delivery/</link><pubDate>Thu, 01 Feb 2024 00:00:00 +0000</pubDate><guid>https://www.exeal.com/blog/2024/02/entregar-codigo-a-diario-continuous-integration-y-continuous-delivery/</guid><description>En el mundo del desarrollo de software, la capacidad de integrar y desplegar código de manera eficiente y segura es crucial. Esta práctica no solo mejora la calidad del producto final, sino que también optimiza el proceso de desarrollo. En este post, exploraremos cómo lograr integraciones y despliegues diarios seguros, profundizando en los conceptos de Integración Continua (CI) y Entrega Continua (CD), sus diferencias y objetivos.
Integración y despliegue diario: ¿Cómo conseguirlo?</description></item><item><title>Cuándo es recomendable y cuándo no usar TDD</title><link>https://www.exeal.com/blog/2024/01/cuando-es-recomendable-y-cuando-no-usar-tdd/</link><pubDate>Wed, 31 Jan 2024 00:00:00 +0000</pubDate><guid>https://www.exeal.com/blog/2024/01/cuando-es-recomendable-y-cuando-no-usar-tdd/</guid><description>En el mundo del desarrollo de software, la adopción de prácticas como Test-driven development (Desarrollo dirigido por pruebas, o TDD) ha generado debates fervientes sobre su aplicabilidad universal. La premisa de alcanzar un 100% de cobertura de pruebas puede resultar atractiva, pero es crucial comprender que TDD es una herramienta, no una panacea. Aprender a discernir cuándo utilizarla de manera efectiva es fundamental para el éxito de un proyecto.
Enfoque en el dominio Uno de los principios clave al decidir cuándo emplear TDD es evaluar la proximidad al dominio de la aplicación.</description></item></channel></rss>