<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>legacy on Exeal</title><link>https://www.exeal.com/tags/legacy/</link><description>Recent content in legacy on Exeal</description><generator>Hugo -- gohugo.io</generator><language>es</language><lastBuildDate>Thu, 10 Nov 2022 00:07:00 +0100</lastBuildDate><atom:link href="https://www.exeal.com/tags/legacy/index.xml" rel="self" type="application/rss+xml"/><item><title>Prepara tu c√≥digo para lo que venga con Reflective Design</title><link>https://www.exeal.com/blog/2022/08/reflective-design/</link><pubDate>Thu, 10 Nov 2022 00:07:00 +0100</pubDate><guid>https://www.exeal.com/blog/2022/08/reflective-design/</guid><description>¬øPor qu√© los proyectos greenfield acaban convirti√©ndose poco a poco en c√≥digo legacy, dif√≠cil de extender y mantener?
En un anterior post coment√°bamos que existen fuerzas, como los requisitos cambiantes, los deadlines, o la naturaleza social del desarrollo de software, que hace que el c√≥digo de nuestros proyectos poco a poco se vaya deteriorando si no hacemos nada al respecto. Por tanto, como desarrolladores debemos ejercer fuerzas opuestas para contrarrestar este efecto.</description></item><item><title>Characterization Tests</title><link>https://www.exeal.com/blog/2021/10/characterization-test/</link><pubDate>Thu, 21 Oct 2021 00:10:00 +0100</pubDate><guid>https://www.exeal.com/blog/2021/10/characterization-test/</guid><description>Characterization Tests ¬°Hola! ¬øc√≥mo estan? Espero que muy bien, Soy Dami√°n üëã, Technical Coach en Exeal, y hoy me gustar√≠a intentar explicarles para qu√© sirven los tests de caracterizaci√≥n.
¬øQu√© son? &amp;hellip; Cuando trabajamos con c√≥digo legacy, los tests de caracterizaci√≥n pueden ser una excelente herramienta para afrontar futuros refactors, ya que son tests automatizados que permiten tener un respaldo al momento de querer refactorizar un determinado componente de nuestra aplicaci√≥n.</description></item><item><title>Strangler fig pattern</title><link>https://www.exeal.com/blog/2021/10/stringler-fig-pattern/</link><pubDate>Sun, 03 Oct 2021 00:10:00 +0100</pubDate><guid>https://www.exeal.com/blog/2021/10/stringler-fig-pattern/</guid><description>Mi primer blog ¬°Hola! ¬øc√≥mo estan? Espero que muy bien, Soy Dami√°n üëã, Technical Coach de Exeal, y hoy vengo a comentarles nuestra experiencia aplicando Strangler fig pattern.
Antes de comenzar &amp;hellip; Me gustar√≠a explicarles brevemente en qu√© consiste esta t√©cnica de refactoring. Strangler fig pattern es un t√©cnica que nos permitir√° migrar nuestro actual software a otro anteponiendo un proxy que nos ayudar√° a migrar poco a poco nuestro c√≥digo obsoleto a nuestro nuevo software.</description></item><item><title>H√°bitos de productividad como programadores</title><link>https://www.exeal.com/blog/2021/04/habitos-de-productividad-como-programadores/</link><pubDate>Sun, 18 Apr 2021 00:10:00 +0100</pubDate><guid>https://www.exeal.com/blog/2021/04/habitos-de-productividad-como-programadores/</guid><description>En el anterior post de esta serie sobre c√≥mo evitar que el c√≥digo greenfield se convierta en legacy, habl√°bamos de que una de las √°reas en las que pod√≠amos trabajar era en mejorar nuestras competencias y habilidades como desarrolladores para ser m√°s productivo.
En mi experiencia haciendo coaching a equipos, uno de los primeros grandes saltos cualitativos para la mayor√≠a de ellos es aprender a usar correctamente las herramientas de nuestro d√≠a a d√≠a.</description></item><item><title>¬øPor qu√© el c√≥digo degenera?</title><link>https://www.exeal.com/blog/2021/03/por-que-el-codigo-degenera/</link><pubDate>Fri, 26 Mar 2021 00:10:00 +0100</pubDate><guid>https://www.exeal.com/blog/2021/03/por-que-el-codigo-degenera/</guid><description>En mi training sobre c√≥digo legacy, suelo empezar preguntando a la gente que ‚Äúqu√© es lo que caracteriza un c√≥digo legacy‚Äù, y hay una constante que siempre sale en todos los equipos: el c√≥digo legacy da miedo, porque tocarlo supone un riesgo. Riesgo de romper algo que antes funcionaba, que est√° dando dinero, que est√° pagando las facturas‚Ä¶ y deje de funcionar.
Existe una concepci√≥n negativa sobre el c√≥digo legacy: como desarrolladores, tendemos a evitar este tipo de proyectos.</description></item></channel></rss>