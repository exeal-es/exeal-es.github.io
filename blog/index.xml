<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Blog on Exeal</title><link>https://www.exeal.com/blog/</link><description>Recent content in Blog on Exeal</description><generator>Hugo -- gohugo.io</generator><language>es-es</language><lastBuildDate>Sun, 19 Jul 2020 16:14:05 +0200</lastBuildDate><atom:link href="https://www.exeal.com/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>Pr√°ctica deliberada: una forma alternativa de aprender TDD</title><link>https://www.exeal.com/blog/2023/10/practica-deliberada-y-tdd/</link><pubDate>Tue, 31 Oct 2023 00:00:00 +0000</pubDate><guid>https://www.exeal.com/blog/2023/10/practica-deliberada-y-tdd/</guid><description>¬øAlguna vez te has estancado practicando TDD, refactoring, dise√±o de software o cualquier otra habilidad relacionada con la programaci√≥n?
¬øSientes que te has quedado sin katas de resolver, y que las que hay son demasiado sencillas?
Quiz√° es que est√©s practicando con el enfoque err√≥neo.
Para extraer el m√°ximo partido de practicar con katas, tenemos que emplear una t√©cnica de pr√°ctica muy concreta: la pr√°ctica deliberada.
¬øQu√© es la pr√°ctica deliberada?</description></item><item><title>C√≥mo escribir el primer test usando TDD</title><link>https://www.exeal.com/blog/2023/10/como-escribir-el-primer-test-usando-tdd/</link><pubDate>Wed, 25 Oct 2023 00:00:00 +0000</pubDate><guid>https://www.exeal.com/blog/2023/10/como-escribir-el-primer-test-usando-tdd/</guid><description>El primer test es uno de los pasos m√°s importantes cuando desarrollamos TDD. Es el que va a determinar si construimos nuestra soluci√≥n sobre unos cimientos s√≥lidos o nos vamos a complicar la vida innecesariamente.
Hay tres cosas principales que yo le pido a mi primer test:
La primera, que ponga sobre la mesa los elementos m√°s importantes que van a entrar en juego, o las entradas y salidas del sistema (a.</description></item><item><title>¬øQui√©n deber√≠a escribir las historias de usuario?</title><link>https://www.exeal.com/blog/2023/10/quien-deberia-escribir-las-historias-de-usuario/</link><pubDate>Tue, 24 Oct 2023 00:00:00 +0000</pubDate><guid>https://www.exeal.com/blog/2023/10/quien-deberia-escribir-las-historias-de-usuario/</guid><description>¬øQui√©n escribe las historias de usuario? ¬øEl Product Owner? ¬øEl Product Manager? ¬øEl propio equipo?
Es una pregunta que sale de forma recurrente en los equipos. En la mayor√≠a, es algo que hace el Product Owner. Es la √∫nica perspectiva que los desarrolladores tienen sobre &amp;ldquo;lo que pide&amp;rdquo; el cliente. Un documento de requisitos escrito por un proxy de un proxy del cliente, con el que jugamos al tel√©fono roto.</description></item><item><title>C√≥mo dividir los requisitos para entregar valor de forma continua: Vertical Slicing</title><link>https://www.exeal.com/blog/2023/10/como-dividir-los-requisitos-para-entregar-valor-de-forma-continua-vertical-slicing/</link><pubDate>Tue, 17 Oct 2023 00:00:00 +0000</pubDate><guid>https://www.exeal.com/blog/2023/10/como-dividir-los-requisitos-para-entregar-valor-de-forma-continua-vertical-slicing/</guid><description>Cuando trabajamos en un proyecto software de cierto tama√±o, tenemos que dividir (hacer slicing, o &amp;ldquo;loncheado&amp;rdquo;) los requisitos m√°s grandes en tareas m√°s peque√±as y abordables.
Existen dos formas de hacer esta divisi√≥n: slicing horizontal y vertical.
Cuando hacemos horizontal slicing, dividimos por un criterio t√©cnico (normalmente capas). Hacemos una tarea para el front, otra para el back, otra para la base de datos, etc.
Este enfoque nos plantea 2 problemas</description></item><item><title>Slack: c√≥mo ganar predictibilidad, agilidad y construir un ritmo sostenible</title><link>https://www.exeal.com/blog/2023/07/slack-como-ganar-predictibilidad-agilidad-y-ritmo-sostenible/</link><pubDate>Thu, 20 Jul 2023 00:00:00 +0000</pubDate><guid>https://www.exeal.com/blog/2023/07/slack-como-ganar-predictibilidad-agilidad-y-ritmo-sostenible/</guid><description>Una historia de ‚Ä¶ ¬ømensajer√≠a? Perm√≠teme que te presente al equipo de Messaging de la empresa Drocsid Inc. El equipo de Messaging viene arrastrando un problema durante los √∫ltimos meses: en las √∫ltimas iteraciones de producto vienen sistem√°ticamente fallando al entregar todas las historias con las que se comprometieron al principio de la iteraci√≥n. En cada sprint review se repite la misma situaci√≥n: el equipo excus√°ndose en que los inconvenientes del business as usual (esas tareas operativas que no podemos evitar, como resolver incidencias, dar soporte, despliegues, etc.</description></item><item><title>Prepara tu c√≥digo para lo que venga con Reflective Design</title><link>https://www.exeal.com/blog/2022/08/reflective-design/</link><pubDate>Thu, 10 Nov 2022 00:07:00 +0100</pubDate><guid>https://www.exeal.com/blog/2022/08/reflective-design/</guid><description>¬øPor qu√© los proyectos greenfield acaban convirti√©ndose poco a poco en c√≥digo legacy, dif√≠cil de extender y mantener?
En un anterior post coment√°bamos que existen fuerzas, como los requisitos cambiantes, los deadlines, o la naturaleza social del desarrollo de software, que hace que el c√≥digo de nuestros proyectos poco a poco se vaya deteriorando si no hacemos nada al respecto. Por tanto, como desarrolladores debemos ejercer fuerzas opuestas para contrarrestar este efecto.</description></item><item><title>Los principios FIRST</title><link>https://www.exeal.com/blog/2022/08/first/</link><pubDate>Wed, 28 Sep 2022 23:10:00 +0000</pubDate><guid>https://www.exeal.com/blog/2022/08/first/</guid><description>Los principios FIRST FIRST es el acr√≥nimo de las cinco caracter√≠sticas que deben tener nuestros tests unitarios para ser considerados tests de calidad:
Fast (r√°pido) Independent (independiente) Repeatable (repetible) Self-validating (auto evaluable) Timely (oportuno) Fast (r√°pido) Una de las ventajas que nos ofrecen los test unitarios es la posibilidad de ejecutar un gran n√∫mero de tests en cuesti√≥n de segundos. Todas las pruebas de nuestro proyecto, o al menos las relacionadas con el c√≥digo, que estemos desarrollando deber√≠an poder ejecutarse en un abrir y cerrar de ojos.</description></item><item><title>Transformation Priority Premise</title><link>https://www.exeal.com/blog/2022/08/transformation-priority-premise/</link><pubDate>Sun, 07 Aug 2022 23:10:00 +0000</pubDate><guid>https://www.exeal.com/blog/2022/08/transformation-priority-premise/</guid><description>Transformation Priority Premise El tio bob lleva muchos a√±os diciendo que mientras las pruebas son m√°s espec√≠ficas, el c√≥digo se hace m√°s gen√©rico. Y es que de tanto refactorizar, de tanto modificar el c√≥digo con esas peque√±as mejoras de estructura sin cambiar su comportamiento exterior, van ocurriendo transformaciones en el c√≥digo de producci√≥n que parecen seguir un cierto camino ordenado.
Esto parece generar una lista de transformaciones ordenada que nos puede servir de gu√≠a para alcanzar una implementaci√≥n m√°s gen√©rica.</description></item><item><title>El rol de technical coach: ¬øpodr√≠a ser para m√≠?</title><link>https://www.exeal.com/blog/2022/04/technical-coach/</link><pubDate>Tue, 19 Apr 2022 00:10:00 +0100</pubDate><guid>https://www.exeal.com/blog/2022/04/technical-coach/</guid><description>C√≥mo y por qu√© acab√© siendo technical coach Hace tres meses comenc√© una nueva aventura profesional en Exeal (una empresa que se dedica a mejorar las habilidades de los equipos que desarrollan software). Buscaban a alguien que quisiera ejercer el rol de technical coach. Aunque en ese momento yo no estaba buscando un cambio y no ten√≠a ninguna experencia formal en el puesto, no pude resistirme por dos motivos principalmente:</description></item><item><title>Mob programming</title><link>https://www.exeal.com/blog/2021/10/mob-programming/</link><pubDate>Tue, 26 Oct 2021 00:10:00 +0100</pubDate><guid>https://www.exeal.com/blog/2021/10/mob-programming/</guid><description>Mob programming ¬°Hola! ¬øc√≥mo estan? Espero que muy bien, Soy Dami√°n üëã, Technical Coach en Exeal, y en esta oportunidad me gustar√≠a explicarles brevemente como funciona esta din√°mica que llevamos a diario en Exeal
Desde mi punto de vista, Mob Programming es una de las mejores pr√°cticas que debe tener cualquier desarrollador de software dentro de su toolkit; no solo por los resultados evidentes de esta din√°mica, como el conocimiento colectivo y la calidad de c√≥digo que aportamos al momento de realizarlo, sino porque adem√°s nos ense√±a impl√≠citamente a escuchar, hablar y respetar a nuestros compa√±eros de equipo.</description></item><item><title>Characterization Tests</title><link>https://www.exeal.com/blog/2021/10/characterization-test/</link><pubDate>Thu, 21 Oct 2021 00:10:00 +0100</pubDate><guid>https://www.exeal.com/blog/2021/10/characterization-test/</guid><description>Characterization Tests ¬°Hola! ¬øc√≥mo estan? Espero que muy bien, Soy Dami√°n üëã, Technical Coach en Exeal, y hoy me gustar√≠a intentar explicarles para qu√© sirven los tests de caracterizaci√≥n.
¬øQu√© son? &amp;hellip; Cuando trabajamos con c√≥digo legacy, los tests de caracterizaci√≥n pueden ser una excelente herramienta para afrontar futuros refactors, ya que son tests automatizados que permiten tener un respaldo al momento de querer refactorizar un determinado componente de nuestra aplicaci√≥n.</description></item><item><title>Strangler fig pattern</title><link>https://www.exeal.com/blog/2021/10/stringler-fig-pattern/</link><pubDate>Sun, 03 Oct 2021 00:10:00 +0100</pubDate><guid>https://www.exeal.com/blog/2021/10/stringler-fig-pattern/</guid><description>Mi primer blog ¬°Hola! ¬øc√≥mo estan? Espero que muy bien, Soy Dami√°n üëã, Technical Coach de Exeal, y hoy vengo a comentarles nuestra experiencia aplicando Strangler fig pattern.
Antes de comenzar &amp;hellip; Me gustar√≠a explicarles brevemente en qu√© consiste esta t√©cnica de refactoring. Strangler fig pattern es un t√©cnica que nos permitir√° migrar nuestro actual software a otro anteponiendo un proxy que nos ayudar√° a migrar poco a poco nuestro c√≥digo obsoleto a nuestro nuevo software.</description></item><item><title>H√°bitos de productividad como programadores</title><link>https://www.exeal.com/blog/2021/04/habitos-de-productividad-como-programadores/</link><pubDate>Sun, 18 Apr 2021 00:10:00 +0100</pubDate><guid>https://www.exeal.com/blog/2021/04/habitos-de-productividad-como-programadores/</guid><description>En el anterior post de esta serie sobre c√≥mo evitar que el c√≥digo greenfield se convierta en legacy, habl√°bamos de que una de las √°reas en las que pod√≠amos trabajar era en mejorar nuestras competencias y habilidades como desarrolladores para ser m√°s productivo.
En mi experiencia haciendo coaching a equipos, uno de los primeros grandes saltos cualitativos para la mayor√≠a de ellos es aprender a usar correctamente las herramientas de nuestro d√≠a a d√≠a.</description></item><item><title>Logs 101</title><link>https://www.exeal.com/blog/2021/04/logs-101/</link><pubDate>Wed, 07 Apr 2021 00:10:00 +0100</pubDate><guid>https://www.exeal.com/blog/2021/04/logs-101/</guid><description>Recientemente en el equipo con el que trabajo, hemos tenido varias incidencias que han sido bastante dif√≠ciles de depurar. Los principales motivos son los siguientes:
No hay logs Los logs que hay no son √∫tiles A ra√≠z de esto prepar√© una learning hour sobre el tema, cuyo contenido ha acabado convirti√©ndose en este post. Vamos a revisitar conceptos basicos de logging, explicar los factores necesarios para que los logs sean √∫tiles, y aclarar algunos conceptos err√≥neos.</description></item><item><title>¬øPor qu√© el c√≥digo degenera?</title><link>https://www.exeal.com/blog/2021/03/por-que-el-codigo-degenera/</link><pubDate>Fri, 26 Mar 2021 00:10:00 +0100</pubDate><guid>https://www.exeal.com/blog/2021/03/por-que-el-codigo-degenera/</guid><description>En mi training sobre c√≥digo legacy, suelo empezar preguntando a la gente que ‚Äúqu√© es lo que caracteriza un c√≥digo legacy‚Äù, y hay una constante que siempre sale en todos los equipos: el c√≥digo legacy da miedo, porque tocarlo supone un riesgo. Riesgo de romper algo que antes funcionaba, que est√° dando dinero, que est√° pagando las facturas‚Ä¶ y deje de funcionar.
Existe una concepci√≥n negativa sobre el c√≥digo legacy: como desarrolladores, tendemos a evitar este tipo de proyectos.</description></item><item><title>#4: Ritmo sostenible y c√≥digo legacy</title><link>https://www.exeal.com/blog/2021/02/podcast-episodio-4-ritmo-sostenible-y-codigo-legacy/</link><pubDate>Sun, 28 Feb 2021 10:00:00 +0200</pubDate><guid>https://www.exeal.com/blog/2021/02/podcast-episodio-4-ritmo-sostenible-y-codigo-legacy/</guid><description>En el episodio de hoy, aparcamos el formato tradicional de invitados para escuchar un fragmento de una interesant√≠sima discusi√≥n surgida durante uno de los trainings sobre Legacy Code de Exeal. ¬øQu√© cualidades definen la naturaleza del c√≥digo legacy? ¬øQu√© factores hacen que un c√≥digo greenfield se convierta en legacy? ¬øQu√© podemos hacer nosotros como desarrolladores para ponerles freno?</description></item><item><title>#3: Startup y freelancing</title><link>https://www.exeal.com/blog/2020/10/podcast-episodio-3-startup-y-freelancing/</link><pubDate>Fri, 02 Oct 2020 09:24:51 +0200</pubDate><guid>https://www.exeal.com/blog/2020/10/podcast-episodio-3-startup-y-freelancing/</guid><description>En el episodio de hoy nos sumergimos de lleno en el trepidante mundo Startup de la mano de Iv√°n Ruiz, desarrollador de software freelance y CTO en la startup Nannyfy. Iv√°n, que tambi√©n tiene su carrera en empresas grandes, nos explicar√° de primera mano las diferencias clave de estos dos mundos, y cantidad de historias extra√≠das directamente de las trincheras.</description></item><item><title>Reconciliando a producto y tecnolog√≠a</title><link>https://www.exeal.com/blog/2020/09/reconciliando-a-producto-y-tecnologia/</link><pubDate>Fri, 25 Sep 2020 00:00:00 +0200</pubDate><guid>https://www.exeal.com/blog/2020/09/reconciliando-a-producto-y-tecnologia/</guid><description>Reconciliando a producto y tecnolog√≠a Uno de los problemas que m√°s a menudo se puede encontrar en casi cualquier compa√±√≠a de producto tecnol√≥gico es: c√≥mo encajar las prioridades de producto, es decir, el desarrollo de nuevas funcionalidades, corregir fallos, etc., con las prioridades tecnol√≥gicas, es decir, requisitos no funcionales, modernizaci√≥n de la tecnolog√≠a, mantenimiento, optimizaci√≥n, etc. En este art√≠culo pretendo explorar este conflicto y exponer patrones y antipatrones basados en mi experiencia como desarrollador y technical coach (por lo cual aviso de que el art√≠culo puede ser algo opinionated).</description></item><item><title>Gestiona los errores de tus APIs web como un pro</title><link>https://www.exeal.com/blog/2020/09/gestiona-los-errores-de-tus-apis-web-como-un-pro/</link><pubDate>Fri, 04 Sep 2020 00:00:00 +0200</pubDate><guid>https://www.exeal.com/blog/2020/09/gestiona-los-errores-de-tus-apis-web-como-un-pro/</guid><description>&lt;p>La gesti√≥n de errores en APIs web es un punto clave a la hora de dise√±ar nuestra API y &lt;strong>darle un punto de calidad de vida a los usuarios de la misma&lt;/strong>.&lt;/p></description></item><item><title>Estandarizar la arquitectura: ¬øbuena o mala idea?</title><link>https://www.exeal.com/blog/2020/08/estandarizar-la-arquitectura-buena-o-mala-idea/</link><pubDate>Thu, 06 Aug 2020 00:00:00 +0200</pubDate><guid>https://www.exeal.com/blog/2020/08/estandarizar-la-arquitectura-buena-o-mala-idea/</guid><description>&lt;p>Reci√©ntemente en el equipo con el que trabajo actualmente, tuvimos una interesante discusi√≥n de dise√±o de una de nuestras APIs web.&lt;/p></description></item><item><title>#2: Historia de una transformaci√≥n cultural</title><link>https://www.exeal.com/blog/2020/07/podcast-episodio-2-historia-de-una-transformacion-cultural/</link><pubDate>Thu, 09 Jul 2020 00:00:00 +0200</pubDate><guid>https://www.exeal.com/blog/2020/07/podcast-episodio-2-historia-de-una-transformacion-cultural/</guid><description>En el episodio de hoy, los compa√±eros de la empresa Voxel Group, de Barcelona, nos cuentan c√≥mo han sido impulsores de una transformaci√≥n cultural hacia una cultura de aprendizaje continuo, y han dise√±ado y ejecutado una estrategia de formaci√≥n para todos los miembros del departamento de IT. Josep, Beth, Xavi, Meri, Vicen√ß y Ram√≥n nos cuentan c√≥mo lo est√°n haciendo, y todos los retos a los que se han enfrentado y contin√∫an enfrent√°ndose, c√≥mo viven el proceso en el d√≠a a d√≠a, desde dentro, tanto a nivel profesional, como personal.</description></item><item><title>#1: Consultor√≠a de software en Alemania</title><link>https://www.exeal.com/blog/2020/06/podcast-episodio-1-consultoria-de-software-en-alemania/</link><pubDate>Wed, 17 Jun 2020 00:00:00 +0200</pubDate><guid>https://www.exeal.com/blog/2020/06/podcast-episodio-1-consultoria-de-software-en-alemania/</guid><description>En nuestro primer episodio, aprenderemos de la mano de nuestro invitado Federico S√∂renson acerca del mundo de la consultor√≠a de software, especialmente en Alemania, donde Federico ha desarrollado la totalidad de su carrera profesional. Descubriremos qu√© hay de cierto en los &amp;ldquo;t√≠picos t√≥picos&amp;rdquo; de la cultura alemana, c√≥mo afectan a los equipos de IT, por qu√© valores se rigen las relaciones empresariales, a la par que conocemos m√°s c√≥mo es el d√≠a a d√≠a de un ingeniero de software fuera de nuestras fronteras.</description></item></channel></rss>